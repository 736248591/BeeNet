// <auto-generated />
using System;
using BeeNetServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeeNetServer.Migrations
{
    [DbContext(typeof(BeeNetContext))]
    [Migration("20200624143732_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("BeeNetServer.Models.Label", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now','localtime')");

                    b.Property<DateTime>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now','localtime')");

                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("Name");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("BeeNetServer.Models.Picture", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now','localtime')");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MD5")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now','localtime')");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PriHash")
                        .HasColumnType("BLOB");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MD5")
                        .IsUnique();

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("BeeNetServer.Models.PictureLabel", b =>
                {
                    b.Property<string>("LabelName")
                        .HasColumnType("TEXT");

                    b.Property<uint>("PictureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LabelName", "PictureId");

                    b.HasIndex("PictureId");

                    b.ToTable("PictureLabels");
                });

            modelBuilder.Entity("BeeNetServer.Models.Workspace", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Context")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Index")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("BeeNetServer.Models.WorkspacePicture", b =>
                {
                    b.Property<uint>("PictureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkspaceName")
                        .HasColumnType("TEXT");

                    b.HasKey("PictureId", "WorkspaceName");

                    b.HasIndex("WorkspaceName");

                    b.ToTable("WorkspacePicture");
                });

            modelBuilder.Entity("BeeNetServer.Models.PictureLabel", b =>
                {
                    b.HasOne("BeeNetServer.Models.Label", "Label")
                        .WithMany()
                        .HasForeignKey("LabelName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeeNetServer.Models.Picture", "Picture")
                        .WithMany("PictureLabels")
                        .HasForeignKey("PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeeNetServer.Models.WorkspacePicture", b =>
                {
                    b.HasOne("BeeNetServer.Models.Picture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeeNetServer.Models.Workspace", "Workspace")
                        .WithMany("WorkspacePictures")
                        .HasForeignKey("WorkspaceName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
